import ValueObject from './ValueObject';

/**
 * Holds the serialized DomainEvent. They are meant to be persisted
 * into the EventStore.
 */
export default abstract class StoreEvent<
  SerializedDomainEvent
> extends ValueObject {
  /**
   * Each StoredEvent instance gets a unique sequence value usually autogenerated
   * by the database and set as its eventId.
   */
  public abstract readonly eventId: string | number;

  /**
   * Copy of the same eventType in the DomainEvent metadata.
   */
  public abstract readonly eventType: string | number;

  /**
   * Copy of the same eventVersion in the DomainEvent metadata.
   */
  public abstract readonly eventVersion: string | number;

  /**
   * Its eventBody contains the serialization of the DomainEvent.
   * E.g. possible serialization to be used is JSON, or it could
   * just use another form.
   */
  public abstract readonly eventBody: SerializedDomainEvent;

  /**
   * Copy of the same occurredOn in the DomainEvent metadata.
   */
  public abstract readonly occurredOn: Date;
}
